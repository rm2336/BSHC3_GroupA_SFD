/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.security.sfd_groupa;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author rokom
 */
public class DatabaseSettingsFrame extends javax.swing.JFrame {

    private GUIManager guiLiaison;
    private PasswordManager passwordLiaison;
    
    /**
     * Creates new form DatabaseSettingsFrame
     */
    public DatabaseSettingsFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBTN = new javax.swing.JButton();
        confirmBTN = new javax.swing.JButton();
        hostTF = new javax.swing.JTextField();
        portTF = new javax.swing.JTextField();
        databaseTF = new javax.swing.JTextField();
        userTF = new javax.swing.JTextField();
        passwordTF = new javax.swing.JTextField();
        hostLBL = new javax.swing.JLabel();
        portLBL = new javax.swing.JLabel();
        databaseLBL = new javax.swing.JLabel();
        userLBL = new javax.swing.JLabel();
        passwordLBL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("databaseSettingsFrame"); // NOI18N

        backBTN.setText("Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        confirmBTN.setText("Confirm");
        confirmBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBTNActionPerformed(evt);
            }
        });

        hostLBL.setText("Host Name:");

        portLBL.setText("Port Number:");

        databaseLBL.setText("Database Name:");

        userLBL.setText("Username:");

        passwordLBL.setText("Password:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hostLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(portLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(databaseLBL))
                                .addGap(41, 41, 41))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(userLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(57, 57, 57))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(passwordLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hostTF)
                            .addComponent(portTF)
                            .addComponent(databaseTF)
                            .addComponent(userTF)
                            .addComponent(passwordTF, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                        .addContainerGap(84, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(confirmBTN)
                        .addGap(36, 36, 36))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hostTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hostLBL))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(portLBL))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(databaseTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(databaseLBL))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userLBL))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLBL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBTN)
                    .addComponent(confirmBTN))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        // TODO add your handling code here:
        guiLiaison.setCurrentFrame("mainFrame");
    }//GEN-LAST:event_backBTNActionPerformed

    private void confirmBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBTNActionPerformed
        // TODO add your handling code here:
        passwordLiaison.setSql_hostName(hostTF.getText());
        passwordLiaison.setSql_portNo(portTF.getText());
        passwordLiaison.setSql_databaseName(databaseTF.getText());
        passwordLiaison.setSql_userName(userTF.getText());
        passwordLiaison.setSql_password(passwordTF.getText());
        // test the connection, if successful save the information locally
        MySQLConnection conn = new MySQLConnection(passwordLiaison.getSql_hostName(), passwordLiaison.getSql_portNo(), 
        passwordLiaison.getSql_databaseName(), passwordLiaison.getSql_userName(), passwordLiaison.getSql_password());
        if (conn.testConnection()) {
            JOptionPane.showMessageDialog(rootPane, "Connection successfully established!");
            File f = new File("sqlsettings.txt");
            try {
                FileWriter fw = new FileWriter(f);
                fw.write(passwordLiaison.getSql_hostName());
                fw.write("\n");
                fw.write(passwordLiaison.getSql_portNo());
                fw.write("\n");
                fw.write(passwordLiaison.getSql_databaseName());
                fw.write("\n");
                fw.write(passwordLiaison.getSql_userName());
                fw.write("\n");
                fw.write(passwordLiaison.getSql_password());
                fw.close();
                System.out.println("Writing credentials to file...");
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
            guiLiaison.setCurrentFrame("mainFrame");
        }
        else
            JOptionPane.showMessageDialog(rootPane, "Could not establish connection. Please check your input.");
    }//GEN-LAST:event_confirmBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatabaseSettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatabaseSettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatabaseSettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseSettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatabaseSettingsFrame().setVisible(true);
            }
        });
    }
    
    public void setGUILiaison(GUIManager manager) {
        guiLiaison = manager;
    }
    
    public void setPasswordLiaison(PasswordManager manager) {
        passwordLiaison = manager;
    }

    public JTextField getDatabaseTF() {
        return databaseTF;
    }

    public JTextField getHostTF() {
        return hostTF;
    }

    public JTextField getPasswordTF() {
        return passwordTF;
    }

    public JTextField getPortTF() {
        return portTF;
    }

    public JTextField getUserTF() {
        return userTF;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBTN;
    private javax.swing.JButton confirmBTN;
    private javax.swing.JLabel databaseLBL;
    private javax.swing.JTextField databaseTF;
    private javax.swing.JLabel hostLBL;
    private javax.swing.JTextField hostTF;
    private javax.swing.JLabel passwordLBL;
    private javax.swing.JTextField passwordTF;
    private javax.swing.JLabel portLBL;
    private javax.swing.JTextField portTF;
    private javax.swing.JLabel userLBL;
    private javax.swing.JTextField userTF;
    // End of variables declaration//GEN-END:variables
}
